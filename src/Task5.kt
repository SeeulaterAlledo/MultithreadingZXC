import java.util.concurrent.CyclicBarrier
import kotlin.concurrent.thread

fun main() {
    val barrier = CyclicBarrier(5) {
        println("üîî –í—Å–µ –ø–æ—Ç–æ–∫–∏ –∑–∞–≤–µ—Ä—à–∏–ª–∏ –ø–µ—Ä–≤—É—é —Ñ–∞–∑—É. –ü–µ—Ä–µ—Ö–æ–¥ –∫–æ –≤—Ç–æ—Ä–æ–π —Ñ–∞–∑–µ.")
    }

    val threads = List(5) { i ->
        thread {
            println("–ü–æ—Ç–æ–∫ $i –≤—ã–ø–æ–ª–Ω—è–µ—Ç –ø–µ—Ä–≤—É—é —á–∞—Å—Ç—å —Ä–∞–±–æ—Ç—ã.")
            Thread.sleep((1000..3000).random().toLong())
            println("–ü–æ—Ç–æ–∫ $i –æ–∂–∏–¥–∞–µ—Ç –¥—Ä—É–≥–∏—Ö –Ω–∞ –±–∞—Ä—å–µ—Ä–µ...")
            barrier.await()

            println("–ü–æ—Ç–æ–∫ $i –≤—ã–ø–æ–ª–Ω—è–µ—Ç –≤—Ç–æ—Ä—É—é —á–∞—Å—Ç—å —Ä–∞–±–æ—Ç—ã.")
        }
    }

    threads.forEach { it.join() }
}
